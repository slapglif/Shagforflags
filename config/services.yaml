# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\Controller\RegistrationController:
        arguments:
            $eventDispatcher: '@event_dispatcher'
            $formFactory: '@fos_user.registration.form.factory'
            $userManager: '@fos_user.user_manager'
            $tokenStorage: '@security.token_storage'

    App\Controller\ResettingController:
        arguments:
            $eventDispatcher: '@event_dispatcher'
            $formFactory: '@fos_user.resetting.form.factory'
            $userManager: '@fos_user.user_manager'
            $tokenGenerator: '@fos_user.util.token_generator'
            $mailer: '@fos_user.mailer'
            $retryTtl: '%fos_user.resetting.retry_ttl%'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    app.authentication_success_handler:
        class: App\Event\LoginSuccessHandler
        arguments: [ '@router', '@security.authorization_checker', '@service_container']
        tags:
            - { name: 'monolog.logger', channel: 'security' }

    quick:
        class: App\Helper\Quick
        public: true
        arguments: [ '@service_container', '@doctrine', '@templating' ]
        tags:
            - { name: templating.helper, alias: quick }

    user:
        class: App\Helper\User
        public: true
        arguments: [ '@service_container', '@doctrine', '@templating' ]
        tags:
            - { name: templating.helper, alias: user }

    story:
        class: App\Helper\Story
        public: true
        arguments: [ '@service_container', '@doctrine', '@templating' ]
        tags:
            - { name: templating.helper, alias: story }